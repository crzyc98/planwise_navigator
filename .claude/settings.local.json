{
  "permissions": {
    "allow": [
      "mcp__gemini-cli__ask-gemini",
      "Bash(*)",
      "Task(*)",
      "Glob(*)",
      "Grep(*)",
      "LS(*)",
      "ExitPlanMode(*)",
      "Read(*)",
      "Edit(*)",
      "MultiEdit(*)",
      "Write(*)",
      "NotebookRead(*)",
      "NotebookEdit(*)",
      "WebFetch(*)",
      "TodoWrite(*)",
      "WebSearch(*)",
      "mcp__ide__getDiagnostics",
      "mcp__ide__executeCode",
      "mcp__gemini-cli__sandbox-test",
      "mcp__gemini-cli__Ping",
      "mcp__gemini-cli__Help",
      "Bash(python:*)",
      "Bash(find:*)",
      "Bash(ls:*)",
      "Bash(dbt parse:*)",
      "Bash(./scripts/run_ci_tests.sh:*)",
      "Bash(source:*)",
      "Bash(ruff check:*)",
      "Bash(dbt compile:*)",
      "Bash(dbt run:*)",
      "Bash(duckdb:*)",
      "Bash(chmod:*)",
      "Bash(git add:*)",
      "Bash(git checkout:*)",
      "Bash(git merge:*)",
      "Bash(git push:*)",
      "Bash(git branch:*)",
      "Bash(git commit:*)",
      "Bash(dbt build:*)",
      "Bash(rm:*)",
      "Bash(grep:*)",
      "Bash(python3 -c \"print(''Python syntax check - no compilation needed for SQL'')\")",
      "Bash(python3 -c \"\ntry:\n    from orchestrator_mvp.core.multi_year_orchestrator import MultiYearSimulationOrchestrator\n    print(''✅ Multi-year orchestrator imports successfully'')\nexcept ImportError as e:\n    print(f''❌ Import error in orchestrator: {e}'')\n\ntry:\n    from orchestrator_mvp.core.workforce_snapshot import generate_workforce_snapshot\n    print(''✅ Workforce snapshot imports successfully'')\nexcept ImportError as e:\n    print(f''❌ Import error in workforce snapshot: {e}'')\n\ntry:\n    import pytest\n    print(''✅ pytest available for tests'')\nexcept ImportError as e:\n    print(f''❌ pytest not available: {e}'')\n\")",
      "Bash(dbt deps:*)",
      "Bash(mv:*)",
      "Bash(awk:*)",
      "Bash(sed:*)",
      "Bash(dbt seed:*)",
      "Bash(sqlite3:*)",
      "Bash(pip install:*)",
      "Bash(pip3 install:*)",
      "Bash(./venv/bin/python:*)",
      "Bash(/Users/nicholasamaral/planwise_navigator/venv/bin/dbt --version)",
      "Bash(/Users/nicholasamaral/planwise_navigator/venv/bin/dbt run --select int_employee_compensation_by_year --vars '{simulation_year: 2025, start_year: 2025}')",
      "Bash(/Users/nicholasamaral/planwise_navigator/venv/bin/dbt run --select int_employee_compensation_by_year --vars '{simulation_year: 2026, start_year: 2025}')",
      "Bash(/Users/nicholasamaral/planwise_navigator/venv/bin/dbt run --select int_active_employees_prev_year_snapshot --vars '{simulation_year: 2026}')",
      "Bash(dbt list:*)",
      "Bash(/Users/nicholasamaral/planwise_navigator/venv/bin/dbt run --select fct_workforce_snapshot --vars '{simulation_year: 2028, start_year: 2025}')",
      "Bash(/Users/nicholasamaral/planwise_navigator/venv/bin/dbt test --select test_promotion_events_applied_to_workforce_state)",
      "Bash(/Users/nicholasamaral/planwise_navigator/venv/bin/dbt test --select test_promotion_events_applied_to_workforce_state --project-dir /Users/nicholasamaral/planwise_navigator/dbt)",
      "Bash(/Users/nicholasamaral/planwise_navigator/venv/bin/dbt list --models int_employee_event_stream+ --output name)",
      "Bash(/Users/nicholasamaral/planwise_navigator/venv/bin/dbt list --models +int_employee_event_stream --output name)",
      "Bash(/Users/nicholasamaral/planwise_navigator/venv/bin/dbt list --models +int_employee_event_stream --output name --project-dir /Users/nicholasamaral/planwise_navigator/dbt)",
      "Bash(/Users/nicholasamaral/planwise_navigator/venv/bin/dbt run --select int_employee_event_stream --vars '{simulation_year: 2028, start_year: 2025}')",
      "Bash(dbt test:*)",
      "Bash(echo:*)",
      "Bash(timeout 120 python -m orchestrator_mvp.run_mvp:*)",
      "Bash(gtimeout:*)",
      "Bash(dbt show:*)",
      "Bash(git rm:*)",
      "Bash(git stash push:*)"
    ],
    "deny": []
  }
}
