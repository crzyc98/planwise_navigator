{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Bash(git push:*)",
      "Bash(git config:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(python:*)",
      "Bash(chmod:*)",
      "Bash(find:*)",
      "Bash(dbt:*)",
      "Bash(dbt list:*)",
      "Bash(PYTHONPATH=. python -m navigator_orchestrator run --years 2025 --verbose)",
      "Bash(git fetch:*)",
      "Bash(tree:*)",
      "Bash(PYTHONPATH=/Users/nicholasamaral/planwise_navigator python -m navigator_orchestrator run --years 2025-2025 --threads 4 --verbose --force-restart)",
      "Bash(rm:*)",
      "Read(//**)",
      "Bash(git checkout:*)",
      "Bash(sed:*)",
      "Bash(duckdb:*)",
      "Bash(time dbt run:*)",
      "Bash(grep:*)",
      "Bash(PYTHONPATH=. python -c \"import navigator_orchestrator; print(''Success'')\")",
      "Bash(time python:*)",
      "Bash(PYTHONPATH=. time python -m navigator_orchestrator run --years 2025-2026 --threads 4 --verbose)",
      "Bash(PYTHONPATH=. python -m navigator_orchestrator run --years 2025-2026 --threads 4 --verbose)",
      "Bash(./scripts/optimize_storage.sh:*)",
      "Bash(./optimize_storage.sh)",
      "Bash(cat:*)",
      "Bash(gh pr view:*)",
      "Bash(PYTHONPATH=. python -m navigator_orchestrator batch --scenarios baseline ae_new_hires ae_all_eligible)",
      "Bash(PYTHONPATH=. python -m navigator_orchestrator batch --scenarios baseline --export-format excel)",
      "Bash(timeout:*)",
      "Bash(DATABASE_PATH=\"../outputs/batch_20250919_084435/baseline/baseline.duckdb\" dbt seed --threads 1 --target optimized)",
      "Bash(DATABASE_PATH=\"../outputs/batch_20250919_084435/baseline/baseline.duckdb\" dbt seed --threads 1)",
      "Bash(DATABASE_PATH=\"outputs/batch_20250919_084629/baseline/baseline.duckdb\" dbt seed --threads 1)",
      "Bash(xargs ls:*)",
      "Bash(DATABASE_PATH=baseline.duckdb dbt compile --select fct_yearly_events --vars '{simulation_year: 2025}')",
      "Bash(DATABASE_PATH=baseline.duckdb dbt run --select tag:EVENT_GENERATION --vars '{simulation_year: 2025}' --threads 1)",
      "Bash(DATABASE_PATH=baseline.duckdb dbt run --select fct_workforce_snapshot --vars '{simulation_year: 2025}' --threads 1)",
      "Bash(DATABASE_PATH=\"../outputs/batch_20250919_084435/baseline/baseline.duckdb\" dbt compile --select fct_yearly_events --vars '{\"\"simulation_year\"\": 2025}')",
      "Bash(DATABASE_PATH=\"baseline.duckdb\" dbt run --select fct_yearly_events --vars '{\"\"simulation_year\"\": 2025}' --threads 1)",
      "Bash(DATABASE_PATH=\"baseline.duckdb\" dbt run --select fct_workforce_snapshot --vars '{\"\"simulation_year\"\": 2025}' --threads 1)",
      "Bash(xxd:*)",
      "Bash(DATABASE_PATH=\"baseline.duckdb\" dbt compile --select fct_workforce_snapshot --vars '{\"\"\"\"simulation_year\"\"\"\": 2025}')",
      "Bash(DATABASE_PATH=\"baseline.duckdb\" dbt run --select fct_workforce_snapshot --vars '{\"\"simulation_year\"\": 2025}' --no-write-json)",
      "Bash(DATABASE_PATH=\"baseline.duckdb\" dbt run --select +int_employee_contributions --vars '{\"\"simulation_year\"\": 2025}' --no-write-json)",
      "Bash(PYTHONPATH=. python -m navigator_orchestrator batch --scenarios baseline)",
      "Bash(PYTHONPATH=. timeout 300 python -m navigator_orchestrator batch --scenarios baseline)",
      "Bash(git reset:*)",
      "Bash(git rm:*)",
      "Bash(lsof:*)",
      "Bash(gh pr list:*)",
      "Bash(pip install:*)",
      "Bash(planwise:*)",
      "Bash(PYTHONPATH=. python -m navigator_orchestrator run --years 2025 --threads 1 --verbose)",
      "Bash(PYTHONPATH=. python -m navigator_orchestrator run --years 2025-2025 --threads 1 --verbose)",
      "Bash(venv/bin/python:*)",
      "Bash(pip show:*)",
      "Bash(DATABASE_PATH=ae_all_eligible.duckdb dbt run --select tag:EVENT_GENERATION --vars \"simulation_year: 2025\" --threads 1)",
      "Bash(export DATABASE_PATH=ae_all_eligible.duckdb)",
      "Bash(tee:*)",
      "Bash(PYTHONPATH=. python -m navigator_orchestrator batch --scenarios baseline --verbose)",
      "Bash(gh pr create:*)",
      "Bash(PYTHONPATH=. python -m navigator_orchestrator run --years 2025-2026 --threads 1 --verbose)",
      "Bash(PYTHONPATH=. python -m navigator_orchestrator run --years 2025-2026 --threads 1)",
      "Bash(curl -LsSf https://astral.sh/uv/install.sh)",
      "Bash(sh)",
      "Bash(~/.local/bin/uv:*)",
      "Bash(time:*)",
      "Bash(.venv-test/bin/python:*)",
      "Bash(.venv-test/bin/pytest --version)",
      "Bash(pytest:*)",
      "Bash(awk:*)"
    ],
    "deny": [],
    "ask": []
  }
}
