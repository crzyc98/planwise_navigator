name: 'planwise_navigator'
version: '1.0.0'
config-version: 2

# Profile configuration
profile: 'planwise_navigator'

# Directory configuration
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"
clean-targets:
  - "target"
  - "dbt_packages"

# E068E: Model configuration with performance optimizations
models:
  planwise_navigator:
    # Global model settings - default to view for memory efficiency
    +materialized: view

    # Staging models - ephemeral for no disk I/O
    staging:
      +materialized: ephemeral
      +docs:
        node_color: "#E8F4FD"

    # Intermediate models - ephemeral to keep in memory
    intermediate:
      +materialized: ephemeral
      +docs:
        node_color: "#FFF2CC"

      # Data integrity models should run before event models
      # Dependency chain: fct_workforce_snapshot → int_active_employees_by_year → event models → fct_yearly_events
      int_active_employees_by_year:
        +tags: ["foundation", "critical", "data_integrity"]
        +materialized: ephemeral  # Keep in memory for performance

    # Mart models - incremental for efficient updates
    marts:
      +materialized: incremental
      +incremental_strategy: 'delete+insert'
      +on_schema_change: 'fail'
      +docs:
        node_color: "#D5E8D4"

      # Specific event models configuration
      fct_yearly_events:
        +materialized: incremental
        +incremental_strategy: 'delete+insert'
        +unique_key: ['scenario_id', 'plan_design_id', 'employee_id', 'simulation_year', 'event_type']
        +tags: ["events", "critical"]

      fct_workforce_snapshot:
        +materialized: incremental
        +incremental_strategy: 'delete+insert'
        +unique_key: ['scenario_id', 'plan_design_id', 'employee_id', 'simulation_year']
        +tags: ["snapshot", "critical"]

    # Dimension models - table materialization for caching
    dimensions:
      +materialized: table
      +docs:
        node_color: "#C7E9F1"
      +tags: ["dimensions"]

    # Debug models - development and testing
    debug:
      +materialized: ephemeral  # Default to ephemeral, overridden by model config
      +tags: ["DEBUG", "DEVELOPMENT"]
      +docs:
        node_color: "#FFE6CC"
      +enabled: "{{ var('enable_debug_models', false) }}"

# E068E: Seeds configuration with performance optimizations
seeds:
  planwise_navigator:
    # Global seed column types for performance
    +column_types:
      employee_id: varchar
      scenario_id: varchar
      plan_design_id: varchar
      simulation_year: integer
      created_at: timestamp
      updated_at: timestamp
      effective_date: date

    # Specific seed configurations
    irs_contribution_limits:
      +column_types:
        limit_year: integer
        base_limit: integer
        catch_up_limit: integer
        catch_up_age_threshold: integer

    comp_levers:
      +column_types:
        parameter_name: varchar
        parameter_value: decimal(10,4)
        effective_date: date
        category: varchar

    census_data:
      +column_types:
        employee_id: varchar
        hire_date: date
        salary: decimal(10,2)
        level: varchar
        department: varchar
        age: integer

    baseline_workforce:
      +column_types:
        employee_id: varchar
        scenario_id: varchar
        plan_design_id: varchar
        simulation_year: integer
        status: varchar

    plan_designs:
      +column_types:
        plan_design_id: varchar
        plan_name: varchar
        plan_type: varchar
        effective_date: date
        employer_match_rate: decimal(5,4)
        vesting_schedule: varchar

# Snapshot configuration
snapshots:
  planwise_navigator:
    +target_schema: main
    +strategy: timestamp
    +updated_at: updated_at

# Data test configuration
data_tests:
  planwise_navigator:
    +store_failures: true
    +schema: main

# Variables
vars:
  # File paths
  census_parquet_path: '/Users/nicholasamaral/planwise_navigator/data/census_preprocessed.parquet'

  # Simulation parameters
  simulation_year: 2025
  simulation_effective_date: '2024-12-31'
  simulation_start_year: 2025
  simulation_end_year: 2029
  target_growth_rate: 0.03
  random_seed: 42

  # E068F: Debug and Developer Ergonomics Configuration
  # Debug mode controls
  enable_debug_models: false          # Master switch for debug model materialization
  debug_event: null                   # Set to 'hire', 'termination', 'promotion', etc.
  debug_employee_id: null             # Focus on specific employee for detailed debugging

  # Development subset controls
  enable_dev_subset: false            # Master switch for development subset controls
  dev_employee_limit: null            # Limit to N employees (exact count)
  dev_subset_pct: null                # Limit to percentage of employees (0.0-1.0)
  dev_employee_ids: null              # Specific employee ID list (comma-separated string)

  # Determinism controls
  preserve_order: true                # Ensure deterministic ordering in all models
  enforce_deterministic_uuids: true   # Use deterministic UUIDs for event generation
  validate_rng_distribution: false    # Enable RNG distribution validation (dev only)

  # Debug event generation rates (for debug models only)
  hire_rate_level_1: 0.15            # Entry level hire rate
  hire_rate_level_2: 0.12            # Mid-level hire rate
  hire_rate_level_3: 0.08            # Senior level hire rate
  hire_rate_default: 0.10            # Default hire rate for other levels

  term_rate_young: 0.18              # Termination rate for employees under 25
  term_rate_early_career: 0.12       # Termination rate for ages 25-34
  term_rate_mid_career: 0.08         # Termination rate for ages 35-44
  term_rate_mature: 0.06             # Termination rate for ages 45-54
  term_rate_pre_retirement: 0.15     # Termination rate for ages 55-64
  term_rate_retirement: 0.25         # Termination rate for ages 65+

  promotion_rate_level_1: 0.20       # Entry level promotion rate
  promotion_rate_level_2: 0.15       # Mid-level promotion rate
  promotion_rate_level_3: 0.10       # Senior level promotion rate
  promotion_rate_level_4: 0.08       # Management level promotion rate
  promotion_rate_level_5: 0.05       # Executive level promotion rate
  promotion_rate_default: 0.03       # Default promotion rate for top levels

  # Raise timing configuration
  raise_timing_methodology: "calendar_driven"  # Options: "legacy", "realistic", "calendar_driven"
  raise_timing_profile: "general_corporate"  # Distribution profile to use
  timing_tolerance: 2.0  # ±2% tolerance for monthly distribution validation

  # Plan eligibility configuration (separate from employer contribution eligibility)
  plan_eligibility_waiting_period_days: 0    # Default: immediate eligibility for plan participation
  plan_eligibility_minimum_age: 21           # Minimum age to participate in the plan

  # E023 Auto-Enrollment Configuration
  # Core auto-enrollment settings
  auto_enrollment_enabled: true
  auto_enrollment_window_days: 45             # Configurable window (45 days default)
  auto_enrollment_default_deferral_rate: 0.02 # 2% default deferral rate
  auto_enrollment_opt_out_grace_period: 30    # Days after auto-enrollment for penalty-free opt-out
  # Default values for consistency (runtime variables from orchestrator take precedence)
  auto_enrollment_scope: "all_eligible_employees"  # Default scope for auto-enrollment
  auto_enrollment_hire_date_cutoff: "2020-01-01"  # Default cutoff date for eligibility

  # Proactive enrollment settings (voluntary enrollment within auto-enrollment window)
  proactive_enrollment_enabled: true
  proactive_enrollment_min_days: 7            # Earliest proactive enrollment (7 days after eligibility)
  proactive_enrollment_max_days: 35           # Latest proactive enrollment (10 days before auto-enrollment deadline)
  proactive_cutoff_before_auto: 10            # Days before auto-enrollment deadline for proactive cutoff

  # Demographic-based enrollment probabilities
  proactive_enrollment_rate_young: 0.25       # Ages 18-30: Lower proactive enrollment rate
  proactive_enrollment_rate_mid_career: 0.45  # Ages 31-45: Moderate proactive enrollment rate
  proactive_enrollment_rate_mature: 0.65      # Ages 46-55: Higher proactive enrollment rate
  proactive_enrollment_rate_senior: 0.75      # Ages 56+: Highest proactive enrollment rate

  # Income-based enrollment adjustments
  enrollment_adjustment_low_income: 0.80      # Multiplier for <$30k (reduced enrollment)
  enrollment_adjustment_moderate: 1.00        # Baseline for $30k-$50k
  enrollment_adjustment_high: 1.15            # Multiplier for $50k-$100k (increased enrollment)
  enrollment_adjustment_executive: 1.30       # Multiplier for >$100k (highest enrollment)

  # Voluntary-only enrollment (for plans without auto-enrollment)
  voluntary_enrollment_enabled: true
  voluntary_enrollment_base_probability: 0.60 # Base probability of voluntary enrollment per year
  voluntary_age_factor_per_year: 0.01         # +1% per year over age 25
  voluntary_tenure_factor_per_year: 0.05      # +5% per year of service
  voluntary_high_earner_bonus: 0.15           # +15% for earners >$100k

  # Opt-out probabilities by demographics
  opt_out_rate_young: 0.35                    # Ages 18-25
  opt_out_rate_mid: 0.20                      # Ages 26-35
  opt_out_rate_mature: 0.15                   # Ages 36-50
  opt_out_rate_senior: 0.10                   # Ages 51+

  # Income-based opt-out adjustments
  opt_out_rate_low_income: 0.40               # <$30k (higher opt-out)
  opt_out_rate_moderate: 0.25                 # $30k-$50k (baseline)
  opt_out_rate_high: 0.15                     # $50k-$100k (lower opt-out)
  opt_out_rate_executive: 0.05                # >$100k (lowest opt-out)

  # Deferral rate distribution for new enrollments
  deferral_rate_3pct_prob: 0.25               # 25% choose 3% (match threshold)
  deferral_rate_6pct_prob: 0.35               # 35% choose 6% (common default)
  deferral_rate_10pct_prob: 0.20              # 20% choose 10% (round number)
  deferral_rate_15pct_prob: 0.10              # 10% choose 15% (high savers)
  deferral_rate_max_prob: 0.10                # 10% choose maximum (limit maximizers)

  # Timing and processing configuration
  enrollment_processing_frequency: "monthly"   # Options: "daily", "weekly", "monthly", "quarterly"
  enrollment_deterministic_timing: true       # Ensure reproducible simulation results
  enrollment_business_day_adjustment: true    # Adjust enrollment dates to business days
  enrollment_holiday_calendar: "us_federal"   # Holiday calendar for business day calculations

  # Performance optimization settings
  enrollment_batch_processing_size: 10000     # Process enrollment in batches for large populations
  enrollment_enable_parallel_processing: true # Enable parallel processing for performance
  enrollment_cache_demographic_calculations: true # Cache demographic-based probability calculations
  enrollment_materialization_strategy: "table" # dbt materialization strategy for enrollment models

  # Plan-specific overrides (future enhancement)
  emergency_plan_auto_enrollment_enabled: false # Disable auto-enrollment for emergency plans
  emergency_plan_window_days: 30                 # Shorter window for emergency plans

  # Match configuration has been moved to config/simulation_config.yaml
  # See the employer_match section in that file
  executive_plan_auto_enrollment_enabled: true   # Enable auto-enrollment for executive plans
  executive_plan_window_days: 60                 # Longer window for executive plans
  executive_plan_default_deferral_rate: 0.10     # Higher default rate for executives

  # Data quality thresholds
  accepted_diff_pct: 0.5
  max_termination_rate: 0.50
  min_headcount_threshold: 100

  # Database configuration
  database_name: 'planwise_navigator'
  schema_prefix: 'dbt_'

  # E068E: Performance optimization variables
  # Storage and I/O settings
  temp_directory: "/tmp/duckdb"           # DuckDB temporary directory (override in production)
  enable_profiling: false                # Enable query profiling (dev only)
  profile_output_dir: "/tmp/profiles"    # Query profile output directory

  # Memory and threading settings
  duckdb_memory_limit: "48GB"            # DuckDB memory limit (75% of 64GB system)
  duckdb_threads: 16                     # Thread count for 16 vCPU machine

  # Batch processing settings
  batch_processing_size: 10000           # Batch size for large operations
  enable_parallel_processing: true       # Enable parallel processing where supported

  # Storage format preferences
  preferred_storage_format: "parquet"    # Preferred format for external data sources

# Macros
dispatch:
  - macro_namespace: dbt_utils
    search_order: ['dbt_utils']

# Quoting configuration (DuckDB specific)
quoting:
  database: false
  schema: false
  identifier: false

# E068E: Engine & I/O Tuning - DuckDB Performance Optimization
on-run-start:
  # Thread optimization for 16 vCPU machine
  - "PRAGMA threads=16"

  # Memory management (leave 16GB for OS/other processes)
  - "PRAGMA memory_limit='48GB'"

  # Query optimization
  - "PRAGMA enable_object_cache=true"
  - "PRAGMA preserve_insertion_order=false"  # Allow reordering for optimization
  - "PRAGMA enable_progress_bar=false"  # Reduce logging overhead

  # I/O optimization - use temp_directory variable with fallback
  - "PRAGMA temp_directory='{{ var(\"temp_directory\", \"/tmp/duckdb\") }}'"
  - "PRAGMA default_null_order='nulls_last'"

  # Columnar storage optimization
  - "SET enable_object_cache TO true"
  - "SET memory_limit TO '48GB'"

  # Startup logging
  - "{{ log('Starting dbt run for PlanWise Navigator with performance optimizations', info=True) }}"

on-run-end:
  # Cleanup and performance reporting
  - "{{ log('Completed dbt run for PlanWise Navigator', info=True) }}"

# Freshness configuration
sources:
  planwise_navigator:
    +freshness:
      warn_after: {count: 24, period: hour}
      error_after: {count: 48, period: hour}
