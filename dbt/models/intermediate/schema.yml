version: 2

models:
  - name: int_cold_start_detection
    description: >
      Cold start detection logic with table existence check.
      Determines if this is a cold start or continuation of existing simulation.
      Uses table existence check to safely handle empty databases.
    config:
      tags: ["foundation", "critical"]
    columns:
      - name: is_cold_start
        description: Boolean flag indicating if this is a cold start scenario
        data_tests:
          - not_null
          - accepted_values:
              values: [true, false]
      - name: last_completed_year
        description: The last completed simulation year (0 if cold start)
        data_tests:
          - not_null

  - name: int_simulation_run_log
    description: >
      Simulation run log for tracking completed years.
      Only inserts when a simulation year completes successfully.
    config:
      tags: ["monitoring", "incremental"]
    columns:
      - name: simulation_year
        description: The completed simulation year
        data_tests:
          - unique
          - not_null
      - name: completion_timestamp
        description: When the simulation year completed
        data_tests:
          - not_null
      - name: run_status
        description: Status of the simulation run
        data_tests:
          - not_null
          - accepted_values:
              values: ['COMPLETED', 'FAILED']
      - name: total_employees_processed
        description: Total number of employees processed in this year
        data_tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0

  - name: int_partitioned_workforce_data
    description: >
      Optimized partitioned workforce data with proper indexing and data types.
      Serves as a performance-optimized base for SCD processing with hash-based change detection.
    config:
      tags: ["performance", "scd", "optimization"]
    columns:
      - name: employee_id
        description: Unique employee identifier
        data_tests:
          - not_null
          - unique
      - name: simulation_year
        description: Simulation year for the data
        data_tests:
          - not_null
      - name: current_compensation
        description: Current employee compensation
        data_tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0
      - name: record_hash
        description: Hash of key fields for efficient change detection
        data_tests:
          - not_null

  - name: int_workforce_changes
    description: >
      Hash-based change detection for efficient SCD processing.
      Only processes employees with actual changes since last snapshot.
    config:
      tags: ["performance", "scd", "change_detection"]
    columns:
      - name: employee_id
        description: Unique employee identifier
        data_tests:
          - not_null
      - name: change_type
        description: Type of change detected
        data_tests:
          - not_null
          - accepted_values:
              values: ['NEW_EMPLOYEE', 'CHANGED', 'UNCHANGED']
      - name: record_hash
        description: Current record hash for change detection
        data_tests:
          - not_null

  - name: int_year_snapshot_preparation
    description: >
      Year snapshot preparation enhancement with validation hooks.
      Prepares workforce data for the current simulation year with validation.
    config:
      tags: ["foundation", "critical"]
    columns:
      - name: employee_id
        description: Unique identifier for each employee
        data_tests:
          - unique
          - not_null
      - name: simulation_year
        description: The simulation year this snapshot represents
        data_tests:
          - not_null
      - name: employment_status
        description: Employment status (active for snapshot preparation)
        data_tests:
          - not_null
          - accepted_values:
              values: ['active']
      - name: is_cold_start
        description: Boolean flag indicating if this is a cold start scenario
        data_tests:
          - not_null
      - name: baseline_active_count
        description: Number of active employees in baseline
        data_tests:
          - not_null
      - name: baseline_total_count
        description: Total number of employees in baseline
        data_tests:
          - not_null

  - name: int_baseline_workforce
    description: >
      Baseline workforce for simulation start, driven by simulation parameters.
      This model provides the initial state of the workforce for multi-year simulations.

      Key features:
      - Calculates age and tenure based on simulation_effective_date
      - Assigns level_id based on compensation bands
      - Creates age and tenure bands for analysis
      - Only includes active employees (no termination date)
    config:
      tags: ["foundation", "critical"]

    columns:
      - name: employee_id
        description: Unique identifier for each employee
        data_tests:
          - unique
          - not_null

      - name: employee_ssn
        description: Employee social security number (masked/encrypted in production)
        data_tests:
          - not_null

      - name: employee_birth_date
        description: Employee birth date
        data_tests:
          - not_null

      - name: employee_hire_date
        description: Employee hire date
        data_tests:
          - not_null

      - name: current_compensation
        description: Employee current gross compensation
        data_tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0
              inclusive: false

      - name: current_age
        description: Employee age as of simulation_effective_date
        data_tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 16
              max_value: 100

      - name: current_tenure
        description: Employee tenure in years as of simulation_effective_date
        data_tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 60

      - name: level_id
        description: Job level ID based on compensation bands
        data_tests:
          - not_null
          - relationships:
              to: ref('stg_config_job_levels')
              field: level_id

      - name: age_band
        description: Age band for analysis (< 25, 25-34, 35-44, 45-54, 55-64, 65+)
        data_tests:
          - not_null
          - accepted_values:
              values: ['< 25', '25-34', '35-44', '45-54', '55-64', '65+']

      - name: tenure_band
        description: Tenure band for analysis (< 2, 2-4, 5-9, 10-19, 20+)
        data_tests:
          - not_null
          - accepted_values:
              values: ['< 2', '2-4', '5-9', '10-19', '20+']

      - name: employment_status
        description: Employment status (always 'active' for baseline)
        data_tests:
          - not_null
          - accepted_values:
              values: ['active']

      - name: termination_date
        description: Termination date (NULL for baseline workforce)

      - name: termination_reason
        description: Termination reason (NULL for baseline workforce)

      - name: simulation_year
        description: The simulation year this baseline represents
        data_tests:
          - not_null

      - name: snapshot_created_at
        description: Timestamp when this snapshot was created
        data_tests:
          - not_null

      - name: is_from_census
        description: Boolean flag indicating if this employee originated from census data
        data_tests:
          - not_null

      - name: is_cold_start
        description: Boolean flag indicating if this is a cold start scenario
        data_tests:
          - not_null

      - name: last_completed_year
        description: The last completed simulation year before this baseline
        data_tests:
          - not_null

  - name: int_workforce_previous_year
    description: >
      Enhanced previous year workforce model with fallback handling.
      Gracefully handles missing prior year data without errors.
    config:
      tags: ["foundation", "critical"]
    columns:
      - name: employee_id
        description: Unique identifier for each employee
        data_tests:
          - unique
          - not_null
      - name: employment_status
        description: Employment status (active/terminated)
        data_tests:
          - not_null
      - name: simulation_year
        description: Simulation year this workforce represents
        data_tests:
          - not_null
      - name: is_from_census
        description: Boolean flag indicating if this employee originated from census data
        data_tests:
          - not_null
      - name: is_cold_start
        description: Boolean flag indicating if this is a cold start scenario
        data_tests:
          - not_null
      - name: active_employees
        description: Total number of active employees in this workforce
        data_tests:
          - not_null
      - name: total_employees
        description: Total number of employees in this workforce
        data_tests:
          - not_null

  - name: int_termination_events
    description: >
      Hazard-based termination events for workforce simulation.
      Uses demographic-aware probability models to select employees for termination.

      Key features:
      - Hazard-based selection using termination probability by age/tenure/level
      - Deterministic randomization with employee_id hash for reproducibility
      - Demographically-aware modeling (higher turnover for new hires)
      - Consistent with promotion event selection pattern
    config:
      tags: ["event_sourcing"]

    # data_tests will be validated at the column level

    columns:
      - name: employee_id
        description: Unique identifier for terminated employee
        data_tests:
          - unique
          - not_null
          - relationships:
              to: ref('int_workforce_previous_year')
              field: employee_id

      - name: event_type
        description: Type of event (always 'termination')
        data_tests:
          - not_null
          - accepted_values:
              values: ['termination']

      - name: simulation_year
        description: Year when termination occurs
        data_tests:
          - not_null

      - name: effective_date
        description: Specific date when termination is effective
        data_tests:
          - not_null

      - name: termination_reason
        description: Reason for termination
        data_tests:
          - not_null
          - accepted_values:
              values: ['hazard_termination', 'gap_filling_termination']

      - name: termination_rate
        description: Probability rate used for this employee's termination
        data_tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1
              inclusive: true

      - name: random_value
        description: Random value used for probability comparison
        data_tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1
              inclusive: true

      - name: age_band
        description: Age band of terminated employee
        data_tests:
          - not_null
          - accepted_values:
              values: ['< 25', '25-34', '35-44', '45-54', '55-64', '65+']

      - name: tenure_band
        description: Tenure band of terminated employee
        data_tests:
          - not_null
          - accepted_values:
              values: ['< 2', '2-4', '5-9', '10-19', '20+']

      - name: level_id
        description: Job level of terminated employee
        data_tests:
          - not_null
          - relationships:
              to: ref('stg_config_job_levels')
              field: level_id

      - name: termination_type
        description: Type of termination processing
        data_tests:
          - not_null
          - accepted_values:
              values: ['hazard_termination', 'gap_filling']

  - name: int_hiring_events
    description: >
      New employee hiring events generated to replace departures and achieve target growth.
      Uses modulo-based date distribution for even hiring throughout the year.

      Key features:
      - Even distribution of hire dates across all 365 days of the year
      - Deterministic behavior preserved (same sequence_num = same date)
      - No clustering at December 31st
      - Realistic hiring patterns for workforce simulation
    config:
      tags: ["event_sourcing", "critical"]

    columns:
      - name: employee_id
        description: Unique identifier for new hire
        data_tests:
          - unique
          - not_null

      - name: employee_ssn
        description: Generated SSN for new hire
        data_tests:
          - unique
          - not_null

      - name: event_type
        description: Type of event (always 'hire')
        data_tests:
          - not_null
          - accepted_values:
              values: ['hire']

      - name: simulation_year
        description: Year when hire occurs
        data_tests:
          - not_null

      - name: effective_date
        description: Specific date when hire is effective
        data_tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: "cast('{{ var('simulation_year') }}-01-01' as date)"
              max_value: "cast('{{ var('simulation_year') }}-12-31' as date)"

      - name: employee_age
        description: Age of new hire
        data_tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 18
              max_value: 70

      - name: birth_date
        description: Birth date of new hire
        data_tests:
          - not_null

      - name: level_id
        description: Job level assigned to new hire
        data_tests:
          - not_null
          - relationships:
              to: ref('stg_config_job_levels')
              field: level_id

      - name: compensation_amount
        description: Starting compensation for new hire
        data_tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 30000
              max_value: 500000

      - name: hire_source
        description: Source of hire (always 'external_hire')
        data_tests:
          - not_null
          - accepted_values:
              values: ['external_hire']

      - name: created_at
        description: Timestamp when record was created
        data_tests:
          - not_null

    # Custom data quality tests to prevent date clustering regression
    data_tests:
      - dbt_utils.expression_is_true:
          expression: "(select round(count(case when extract(month from effective_date) = 12 then 1 end) * 100.0 / count(*), 2) from int_hiring_events) <= 15.0"
          config:
            severity: error
            error_if: ">= 1"

      - dbt_utils.expression_is_true:
          expression: "(select count(distinct effective_date) from int_hiring_events) >= 300"
          config:
            severity: error
            error_if: ">= 1"

  - name: int_effective_parameters
    description: >
      Parameter resolution model that determines effective parameters per scenario, year, level, and event type.
      Provides dynamic parameter lookup with scenario-based overrides and fallback to defaults.

      Key features:
      - Scenario-based parameter resolution with fallback hierarchy
      - Support for parameter locking to prevent changes
      - Audit trail of parameter sources (scenario, default, hardcoded)
      - Optimized for real-time parameter lookup during simulation
    config:
      tags: ["critical", "foundation"]

    columns:
      - name: parameter_key
        description: Unique key for parameter combination
        data_tests:
          - unique
          - not_null

      - name: scenario_id
        description: Scenario identifier for this parameter set
        data_tests:
          - not_null

      - name: fiscal_year
        description: Fiscal year for which this parameter applies
        data_tests:
          - not_null

      - name: job_level
        description: Job level (1-5) for which this parameter applies
        data_tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 1
              max_value: 5

      - name: event_type
        description: Workforce event type for this parameter
        data_tests:
          - not_null
          - accepted_values:
              values: ['RAISE', 'PROMOTION', 'TERMINATION', 'HIRE']

      - name: parameter_name
        description: Name of the parameter
        data_tests:
          - not_null

      - name: parameter_value
        description: Resolved parameter value
        data_tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1

      - name: is_locked
        description: Whether this parameter is locked from changes
        data_tests:
          - not_null

      - name: parameter_source
        description: Source of the parameter value (scenario, default, hardcoded)
        data_tests:
          - not_null
          - accepted_values:
              values: ['scenario', 'default', 'hardcoded']

      - name: resolved_at
        description: Timestamp when parameter was resolved
        data_tests:
          - not_null

  - name: int_merit_events
    description: >
      Merit-based compensation increases applied to eligible employees.
      Uses dynamic parameter resolution for merit rates by job level and year.
    config:
      tags: ["event_sourcing", "critical"]
    columns:
      - name: employee_id
        description: Unique identifier for employee receiving merit increase
        data_tests:
          - not_null
      - name: event_type
        description: Type of event (always 'RAISE')
        data_tests:
          - not_null
          - accepted_values:
              values: ['RAISE']
      - name: simulation_year
        description: Year when merit increase occurs
        data_tests:
          - not_null
      - name: effective_date
        description: Date when merit increase becomes effective
        data_tests:
          - not_null
      - name: compensation_amount
        description: New compensation amount after merit increase
        data_tests:
          - not_null

  - name: int_promotion_events
    description: >
      Promotion events for employees advancing to higher job levels.
      Uses hazard-based probability models with demographic factors.
    config:
      tags: ["event_sourcing", "critical"]
    columns:
      - name: employee_id
        description: Unique identifier for promoted employee
        data_tests:
          - not_null
      - name: event_type
        description: Type of event (always 'promotion')
        data_tests:
          - not_null
          - accepted_values:
              values: ['promotion']
      - name: simulation_year
        description: Year when promotion occurs
        data_tests:
          - not_null
      - name: effective_date
        description: Date when promotion becomes effective
        data_tests:
          - not_null
      - name: to_level
        description: New job level after promotion
        data_tests:
          - not_null
      - name: new_salary
        description: New compensation amount after promotion
        data_tests:
          - not_null

  - name: int_new_hire_termination_events
    description: >
      Termination events for employees hired in the same simulation year.
      Applies higher turnover rates to new hires for realistic modeling.
    config:
      tags: ["event_sourcing"]
    columns:
      - name: employee_id
        description: Unique identifier for terminated new hire
        data_tests:
          - not_null
      - name: event_type
        description: Type of event (always 'termination')
        data_tests:
          - not_null
          - accepted_values:
              values: ['termination']
      - name: simulation_year
        description: Year when termination occurs
        data_tests:
          - not_null
      - name: effective_date
        description: Date when termination becomes effective
        data_tests:
          - not_null

  - name: int_workforce_active_for_events
    description: >
      Dependency-free model that calculates active employees for event generation.
      
      **Purpose:**
      Provides active employee data for event generation without circular dependencies.
      Replaces int_active_employees_by_year for all event models.
      
      **Approach:**
      Calculates the current active workforce by:
      1. Starting with baseline workforce from int_baseline_workforce
      2. Applying all historical events (hires, terminations, promotions, raises) up to simulation_year-1
      3. Determining who is active at the start of simulation_year
      
      **Circular Dependency Resolution:**
      This model only reads from:
      - int_baseline_workforce (independent)  
      - fct_yearly_events (but only for years < simulation_year)
      This prevents circular dependencies with fact tables.
      
      **Data Integrity:**
      Ensures terminated employees don't receive events in subsequent years.
    config:
      tags: ["foundation", "critical", "event_generation"]
    columns:
      - name: simulation_year
        description: Current simulation year
        data_tests:
          - not_null
      - name: employee_id
        description: Unique identifier for each employee
        data_tests:
          - not_null
      - name: employee_ssn
        description: Employee social security number
        data_tests:
          - not_null
      - name: hire_date
        description: Employee hire date
        data_tests:
          - not_null
      - name: employee_gross_compensation
        description: Current gross compensation
        data_tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0
              inclusive: false
      - name: current_age
        description: Employee age in the simulation year
        data_tests:
          - not_null
      - name: current_tenure
        description: Employee tenure in the simulation year
        data_tests:
          - not_null
      - name: job_level
        description: Current job level
        data_tests:
          - not_null
      - name: age_band
        description: Age band for hazard calculations
        data_tests:
          - not_null
      - name: tenure_band
        description: Tenure band for hazard calculations
        data_tests:
          - not_null
      - name: valid_age
        description: Data quality flag for age validation
        data_tests:
          - not_null
      - name: valid_tenure
        description: Data quality flag for tenure validation
        data_tests:
          - not_null
      - name: valid_compensation
        description: Data quality flag for compensation validation
        data_tests:
          - not_null

  - name: int_active_employees_prev_year_snapshot
    description: >
      Primary helper model for circular dependency resolution.
      Provides active employee data from the previous year's completed workforce snapshot.
      
      This model creates a temporal dependency (year N depends on year N-1) instead of 
      a circular dependency within the same year. It queries fct_workforce_snapshot 
      for the previous simulation year and returns only active employees with all 
      required contract fields.
      
      **Circular Dependency Resolution:**
      Eliminates the circular dependency chain by providing clean employee records
      from completed previous year data, ensuring no same-year circular references.
    config:
      tags: ["foundation", "critical", "circular_dependency_resolution"]
    columns:
      - name: employee_id
        description: Unique identifier for each employee
        data_tests:
          - unique
          - not_null
      - name: employee_ssn
        description: Employee social security number
        data_tests:
          - not_null
      - name: employee_birth_date
        description: Employee birth date
        data_tests:
          - not_null
      - name: employee_hire_date
        description: Employee hire date
        data_tests:
          - not_null
      - name: employee_gross_compensation
        description: Employee gross compensation
        data_tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0
              inclusive: false
      - name: current_age
        description: Employee age in the current simulation year
        data_tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 16
              max_value: 100
      - name: current_tenure
        description: Employee tenure in years
        data_tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 60
      - name: level_id
        description: Job level ID
        data_tests:
          - not_null
          - relationships:
              to: ref('stg_config_job_levels')
              field: level_id
      - name: employment_status
        description: Employment status (always 'active' for this model)
        data_tests:
          - not_null
          - accepted_values:
              values: ['active']
      - name: termination_date
        description: Termination date (NULL for active employees)
      - name: age_band
        description: Age band for analysis
        data_tests:
          - not_null
          - accepted_values:
              values: ['Under 25', '25-34', '35-44', '45-54', '55-64', '65+']
      - name: tenure_band
        description: Tenure band for analysis
        data_tests:
          - not_null
          - accepted_values:
              values: ['Less than 1 year', '1-2 years', '3-4 years', '5-9 years', '10-19 years', '20+ years']
      - name: simulation_year
        description: Current simulation year
        data_tests:
          - not_null
      - name: data_source
        description: Source of data (always 'previous_year_snapshot')
        data_tests:
          - not_null
          - accepted_values:
              values: ['previous_year_snapshot']
      - name: data_quality_valid
        description: Data quality validation flag
        data_tests:
          - not_null
          - accepted_values:
              values: [true]

  - name: int_active_employees_by_year
    description: >
      Secondary helper model providing unified interface for active employees across all years.
      
      This model serves as a clean abstraction layer that provides a single interface
      for accessing active employees regardless of the simulation year:
      - For year 1 (start_year): Select from int_baseline_workforce
      - For subsequent years: Select from int_active_employees_prev_year_snapshot
      
      **Purpose:**
      Provides a unified interface that tests expect to exist, ensuring consistent
      column schema across both data sources while maintaining temporal dependencies.
    config:
      tags: ["foundation", "critical", "unified_interface"]
    columns:
      - name: employee_id
        description: Unique identifier for each employee
        data_tests:
          - unique
          - not_null
      - name: employee_ssn
        description: Employee social security number
        data_tests:
          - not_null
      - name: employee_birth_date
        description: Employee birth date
        data_tests:
          - not_null
      - name: employee_hire_date
        description: Employee hire date
        data_tests:
          - not_null
      - name: employee_gross_compensation
        description: Employee gross compensation
        data_tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0
              inclusive: false
      - name: current_age
        description: Employee age in the current simulation year
        data_tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 16
              max_value: 100
      - name: current_tenure
        description: Employee tenure in years
        data_tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 60
      - name: level_id
        description: Job level ID
        data_tests:
          - not_null
          - relationships:
              to: ref('stg_config_job_levels')
              field: level_id
      - name: employment_status
        description: Employment status (always 'active' for this model)
        data_tests:
          - not_null
          - accepted_values:
              values: ['active']
      - name: termination_date
        description: Termination date (NULL for active employees)
      - name: age_band
        description: Age band for analysis
        data_tests:
          - not_null
          - accepted_values:
              values: ['Under 25', '25-34', '35-44', '45-54', '55-64', '65+']
      - name: tenure_band
        description: Tenure band for analysis
        data_tests:
          - not_null
          - accepted_values:
              values: ['Less than 1 year', '1-2 years', '3-4 years', '5-9 years', '10-19 years', '20+ years']
      - name: simulation_year
        description: Current simulation year
        data_tests:
          - not_null
      - name: data_source
        description: Source of data (baseline or previous_year_snapshot)
        data_tests:
          - not_null
          - accepted_values:
              values: ['baseline', 'previous_year_snapshot']
      - name: data_quality_valid
        description: Data quality validation flag
        data_tests:
          - not_null
          - accepted_values:
              values: [true]
      - name: dependency_resolution_method
        description: Method used for dependency resolution
        data_tests:
          - not_null
          - accepted_values:
              values: ['baseline', 'helper_model', 'error_handling']

