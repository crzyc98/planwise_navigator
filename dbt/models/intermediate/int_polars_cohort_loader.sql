{{ config(
    materialized='ephemeral',
    tags=['E077', 'polars_integration']
) }}

-- E077: Load Polars-generated workforce cohorts from Parquet
-- Reads cohorts generated by WorkforcePlanningEngine.generate_cohorts()
-- Provides dbt-native interface to 375Ã— faster Polars event generation

{% set simulation_year = var('simulation_year') %}
{% set scenario_id = var('scenario_id', 'default') %}
{% set cohort_dir = var('polars_cohort_dir', 'outputs/polars_cohorts') %}

-- Check if Polars mode is enabled
{% set use_polars = var('use_polars_engine', false) %}

{% if use_polars %}
    -- Load from Polars Parquet files
    WITH continuous_active AS (
        SELECT *
        FROM read_parquet('{{ cohort_dir }}/{{ scenario_id }}_{{ simulation_year }}/continuous_active.parquet')
    ),

    experienced_terminations AS (
        SELECT *
        FROM read_parquet('{{ cohort_dir }}/{{ scenario_id }}_{{ simulation_year }}/experienced_terminations.parquet')
    ),

    new_hires_active AS (
        SELECT *
        FROM read_parquet('{{ cohort_dir }}/{{ scenario_id }}_{{ simulation_year }}/new_hires_active.parquet')
    ),

    new_hires_terminated AS (
        SELECT *
        FROM read_parquet('{{ cohort_dir }}/{{ scenario_id }}_{{ simulation_year }}/new_hires_terminated.parquet')
    )

    -- Union all cohorts with cohort type marker
    SELECT
        employee_id,
        employee_ssn,
        level_id,
        employee_compensation,
        current_age,
        current_tenure,
        'continuous_active' AS cohort_type,
        {{ simulation_year }} AS simulation_year,
        '{{ scenario_id }}' AS scenario_id
    FROM continuous_active

    UNION ALL

    SELECT
        employee_id,
        employee_ssn,
        level_id,
        employee_compensation,
        current_age,
        current_tenure,
        'experienced_termination' AS cohort_type,
        {{ simulation_year }} AS simulation_year,
        '{{ scenario_id }}' AS scenario_id
    FROM experienced_terminations

    UNION ALL

    SELECT
        employee_id,
        employee_ssn,
        level_id,
        employee_compensation,
        current_age,
        current_tenure,
        'new_hire_active' AS cohort_type,
        {{ simulation_year }} AS simulation_year,
        '{{ scenario_id }}' AS scenario_id
    FROM new_hires_active

    UNION ALL

    SELECT
        employee_id,
        employee_ssn,
        level_id,
        employee_compensation,
        current_age,
        current_tenure,
        'new_hire_terminated' AS cohort_type,
        {{ simulation_year }} AS simulation_year,
        '{{ scenario_id }}' AS scenario_id
    FROM new_hires_terminated

{% else %}
    -- Fallback: SQL-based event generation (original path)
    -- Returns empty result to signal Polars mode not enabled
    SELECT
        CAST(NULL AS VARCHAR) AS employee_id,
        CAST(NULL AS VARCHAR) AS employee_ssn,
        CAST(NULL AS INTEGER) AS level_id,
        CAST(NULL AS DOUBLE) AS employee_compensation,
        CAST(NULL AS INTEGER) AS current_age,
        CAST(NULL AS DOUBLE) AS current_tenure,
        CAST(NULL AS VARCHAR) AS cohort_type,
        CAST(NULL AS INTEGER) AS simulation_year,
        CAST(NULL AS VARCHAR) AS scenario_id
    WHERE 1 = 0  -- Return empty schema
{% endif %}
